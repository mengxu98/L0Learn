(arg0: Numpy.ndarray[numpy.float64],              X=array([[0.93780406, 0.98505432, 0.00249309, ..., 0.65717024, 0.36200664]])
 arg1: Numpy.ndarray[numpy.float64],              y=array([0.72223362, 0.45168066, 0.4353973 , 0.97266714, 0.91242005,])
 arg2: str,                                       Loss='SquaredError',
 arg3: str,                                       Penalty='L0',
 arg4: str,                                       Algorithm='CD',
 arg5: int,                                       NnzStopNum=50,
 arg6: int,                                       G_ncols=0,
 arg7: int,                                       G_nrows=1,
 arg8: float,                                     Lambda2Max=10.0,
 arg9: float,                                     Lambda2Min=0.0001,
 arg10: bool,                                     PartialSort=True,
 arg11: int,                                      MaxIters=200,
 arg12: float,                                    rtol=1e-06,
 arg13: float,                                    atol=1e-09,
 arg14: bool,                                     ActiveSet=True,
 arg15: int,                                      ActiveSetNum=3,
 arg16: int,                                      MaxNumSwaps=100,
 arg17: float,                                    ScaleDownFactor=0.8,
 arg18: int,                                      ScreenSize=50,
 arg19: bool,                                     LambdaU=True,
 arg20: List[List[float]],                        Lambdas=[[10]],
 arg21: int,                                      nfolds=10,
 arg22: float,                                    seed=1,
 arg23: int,                                      ExcludeFirstK=0,
 arg24: bool,                                     Intercept=True,
 arg25: bool,                                     withBounds=False,
 arg26: Numpy.ndarray[numpy.float64],             Lows=array([0.]),
 arg27: Numpy.ndarray[numpy.float64])             Highs=array([0.])







(arg0: Numpy.ndarray[numpy.float64],              array,
 arg1: Numpy.ndarray[numpy.float64],              array,
 arg2: str,                                       Loss='SquaredError',
 arg3: str,                                       Penalty='L0L1',
 arg4: str,                                       Algorithm='CD',
 arg5: int,                                       NnzStopNum=50,
 arg6: int,                                       G_ncols=0,
 arg7: int,                                       G_nrows=2,
 arg8: float,                                     Lambda2Max=10.0,
 arg9: float,                                     Lambda2Min=0.0001,
 arg10: bool,                                     PartialSort=True,
 arg11: int,                                      MaxIters=200,
 arg12: float,                                    rtol=1e-06,
 arg13: float,                                    atol=1e-09,
 arg14: bool,                                     ActiveSet=True,
 arg15: int,                                      ActiveSetNum=3,
 arg16: int,                                      MaxNumSwaps=100,
 arg17: float,                                    ScaleDownFactor=0.8,
 arg18: int,                                      ScreenSize=50,
 arg19: bool,                                     LambdaU=True,
 arg20: List[List[float]],                        Lambdas=[[10], [10]],
 arg21: int,                                      ExcludeFirstK=0,
 arg22: bool,                                     Intercept=True,
 arg23: bool,                                     withBounds=False,
 arg24: Numpy.ndarray[numpy.float64],             Lows=array([0.]),
 arg25: Numpy.ndarray[numpy.float64])             Highs=array([0.])

 const T& X, const arma::vec& y, const std::string Loss,
                      const std::string Penalty, const std::string Algorithm,
                      const unsigned int NnzStopNum, const unsigned int G_ncols,
                      const unsigned int G_nrows, const double Lambda2Max,
                      const double Lambda2Min, const bool PartialSort,
                      const unsigned int MaxIters, const double rtol,
                      const double atol, const bool ActiveSet,
                      const unsigned int ActiveSetNum,
                      const unsigned int MaxNumSwaps, const double ScaleDownFactor,
                      const unsigned int ScreenSize, const bool LambdaU,
                      const std::vector< std::vector<double> > Lambdas,
                      const unsigned int nfolds, const size_t seed,
                      const unsigned int ExcludeFirstK, const bool Intercept,
                      const bool withBounds, const arma::vec &Lows,
                      const arma::vec &Highs